name: Python Linter

on:
  workflow_call:
    # This makes the workflow reusable by other workflows
    inputs:
      python-version:
        required: false
        type: string
        default: '3.10'
        description: 'The Python version to use'
      paths:
        required: false
        type: string
        default: '**.py'
        description: 'Files to lint, using glob pattern'
  push:
    branches: main
    paths:
      - '**.py'
  pull_request:
    branches: main
    paths:
      - '**.py'

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ inputs.python-version || '3.10' }}
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pylint black isort mypy
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 ${{ inputs.paths || '.' }} --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings
          flake8 ${{ inputs.paths || '.' }} --count --exit-zero --max-complexity=10 --max-line-length=100 --statistics
          
      - name: Check formatting with black
        run: |
          black --check --diff ${{ inputs.paths || '.' }}
          
      - name: Check imports with isort
        run: |
          isort --check --diff ${{ inputs.paths || '.' }}
          
      - name: Type checking with mypy
        run: |
          mypy --ignore-missing-imports ${{ inputs.paths || '.' }}
          
      - name: Lint with pylint
        run: |
          if [ "${{ inputs.paths }}" = "**.py" ] || [ -z "${{ inputs.paths }}" ]; then
            pylint --disable=C0111,R0903 $(git ls-files '*.py')
          else
            pylint --disable=C0111,R0903 ${{ inputs.paths }}
          fi